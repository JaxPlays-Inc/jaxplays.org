{{- /* Deprecate site.Author.email in favor of site.Params.author.email */}}
{{- $authorEmail := "" }}
{{- with site.Params.author }}
  {{- if reflect.IsMap . }}
    {{- with .email }}
      {{- $authorEmail = . }}
    {{- end }}
  {{- end }}
{{- else }}
  {{- with site.Author.email }}
    {{- $authorEmail = . }}
    {{- warnf "The author key in site configuration is deprecated. Use params.author.email instead." }}
  {{- end }}
{{- end }}

{{- /* Deprecate site.Author.name in favor of site.Params.author.name */}}
{{- $authorName := "" }}
{{- with site.Params.author }}
  {{- if reflect.IsMap . }}
    {{- with .name }}
      {{- $authorName = . }}
    {{- end }}
  {{- else }}
    {{- $authorName  = . }}
  {{- end }}
{{- else }}
  {{- with site.Author.name }}
    {{- $authorName = . }}
    {{- warnf "The author key in site configuration is deprecated. Use params.author.name instead." }}
  {{- end }}
{{- end }}

{{- $pctx := . }}
{{- if .IsHome }}{{ $pctx = .Site }}{{ end }}
{{- $pages := slice }}
{{- if or $.IsHome $.IsSection }}
{{- $pages = $pctx.RegularPages }}
{{- else }}
{{- $pages = $pctx.Pages }}
{{- end }}
{{- $limit := .Site.Config.Services.RSS.Limit }}
{{- if ge $limit 1 }}
{{- $pages = $pages | first $limit }}
{{- end }}
{{- printf "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>" | safeHTML }}
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>{{ if eq .Title .Site.Title }}{{ .Site.Title }}{{ else }}{{ with .Title }}{{ . }} on {{ end }}{{ .Site.Title }}{{ end }}</title>
    <link>{{ .Permalink }}</link>
    <description>Recent content {{ if ne .Title .Site.Title }}{{ with .Title }}in {{ . }} {{ end }}{{ end }}on {{ .Site.Title }}</description>
    <generator>Hugo</generator>
    <language>{{ site.Language.LanguageCode }}</language>{{ with $authorEmail }}
    <managingEditor>{{.}}{{ with $authorName }} ({{ . }}){{ end }}</managingEditor>{{ end }}{{ with $authorEmail }}
    <webMaster>{{ . }}{{ with $authorName }} ({{ . }}){{ end }}</webMaster>{{ end }}{{ with .Site.Copyright }}
    <copyright>{{ . }}</copyright>{{ end }}{{ if not .Date.IsZero }}
    <lastBuildDate>{{ (index $pages.ByLastmod.Reverse 0).Lastmod.Format "Mon, 02 Jan 2006 15:04:05 -0700" | safeHTML }}</lastBuildDate>{{ end }}
    {{- with .OutputFormats.Get "RSS" }}
    {{ printf "<atom:link href=%q rel=\"self\" type=%q />" .Permalink .MediaType | safeHTML }}
    {{- end }}
    {{- range $pages }}
    <item>
      <title>{{ .Title }}</title>
      <link>{{ .Permalink }}</link>
      <pubDate>{{ .PublishDate.Format "Mon, 02 Jan 2006 15:04:05 -0700" | safeHTML }}</pubDate>
      {{- with $authorEmail }}<author>{{ . }}{{ with $authorName }} ({{ . }}){{ end }}</author>{{ end }}
      <guid>{{ .Permalink }}</guid>
      <description>{{ .Summary | transform.XMLEscape | safeHTML }}</description>
      <content>
       {{- partial "content-wikilinks" .Content | transform.XMLEscape | safeHTML -}}
       
       {{ $productionName := .Params.production | replaceRE " " "-" }}
       {{ $productionPages := where .Site.RegularPages "Section" "eq" "productions" }}
       {{ $matchingProduction := where $productionPages ".File.BaseFileName" "eq" $productionName }}
       {{ $override_dates := .Params.override_dates }}

       {{ with index $matchingProduction 0 }}
         {{ $title := .Title }}
         {{ $theatre := .Params.theatre }}
         {{ $venue := .Params.venue }}
         {{ $opening_date := .Params.opening_date }}
         {{ $closing_date := .Params.closing_date }}
         {{ $url := .Permalink }}
         
         <!-- Format dates -->
         {{ $opening_date := dateFormat "Monday, January 2" .Params.opening_date }}
         {{ $closing_date := dateFormat "Monday, January 2" .Params.closing_date }}

         <!-- Initialize $venueList -->
         {{ $venueList := "" }}
         <!-- Format venue or venues -->
         {{ if (reflect.IsSlice $venue) }}
           {{ $tempVenueList := delimit $venue ", " }}
           {{ $lastComma := findRE ", [^,]*$" $tempVenueList }}
           {{ $lastEntry := index $lastComma 0 | replaceRE "^, " "" }}
           {{ $venueList = replaceRE ", [^,]*$" (printf " and %s" $lastEntry) $tempVenueList }}
         {{ else }}
           {{ $venueList = $venue }}
         {{ end }}

         {{ with $override_dates }}
           <p><a class="i" href="{{ $url }}">{{ $title }}</a> runs {{ $override_dates | markdownify }} at {{ $venueList }}.</p>
         {{ else }}
           <p><a class="i" href="{{ $url }}">{{ $title }}</a> runs {{ $opening_date }} through {{ $closing_date }} at {{ $venueList }}.</p>
         {{ end }}
         <p>For more information, full cast and crew credits and links to tickets, visit the <a class="i" href="{{ $url }}">{{ $title }}</a> page here on JaxPlays.
         </p>
       {{ end }}
       <p>This review <a href="{{ .Permalink }}">{{ .Title }}</a> was originally published on <a href="{{ .Site.BaseURL }}">{{ .Site.Title }}</a>.</p>
       </content>
      {{ with .Params.featured_image }}
      <enclosure url="{{ . | absURL }}" type="image/jpeg"/>
      {{ end }}
    </item>
    {{- end }}
  </channel>
</rss>
